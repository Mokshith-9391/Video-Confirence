{"ast":null,"code":"import _objectSpread from\"C:/Users/MOKSHITH/OneDrive/Desktop/VIDEO CONFERENCE/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useEffect,useRef,useState}from'react';import io from\"socket.io-client\";import{Badge,IconButton,TextField}from'@mui/material';import{Button}from'@mui/material';import VideocamIcon from'@mui/icons-material/Videocam';import VideocamOffIcon from'@mui/icons-material/VideocamOff';import styles from\"../styles/videoComponent.module.css\";import CallEndIcon from'@mui/icons-material/CallEnd';import MicIcon from'@mui/icons-material/Mic';import MicOffIcon from'@mui/icons-material/MicOff';import ScreenShareIcon from'@mui/icons-material/ScreenShare';import StopScreenShareIcon from'@mui/icons-material/StopScreenShare';import ChatIcon from'@mui/icons-material/Chat';import server from'../environment';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const server_url=server;var connections={};const peerConfigConnections={\"iceServers\":[{\"urls\":\"stun:stun.l.google.com:19302\"}]};export default function VideoMeetComponent(){var socketRef=useRef();let socketIdRef=useRef();let localVideoref=useRef();let[videoAvailable,setVideoAvailable]=useState(true);let[audioAvailable,setAudioAvailable]=useState(true);let[video,setVideo]=useState([]);let[audio,setAudio]=useState();let[screen,setScreen]=useState();let[showModal,setModal]=useState(true);let[screenAvailable,setScreenAvailable]=useState();let[messages,setMessages]=useState([]);let[message,setMessage]=useState(\"\");let[newMessages,setNewMessages]=useState(3);let[askForUsername,setAskForUsername]=useState(true);let[username,setUsername]=useState(\"\");const videoRef=useRef([]);let[videos,setVideos]=useState([]);useEffect(()=>{getPermissions();},[]);let getDislayMedia=()=>{if(screen){if(navigator.mediaDevices.getDisplayMedia){navigator.mediaDevices.getDisplayMedia({video:true,audio:true}).then(getDislayMediaSuccess).then(stream=>{}).catch(e=>console.log(e));}}};const getPermissions=async()=>{try{const videoPermission=await navigator.mediaDevices.getUserMedia({video:true});if(videoPermission){setVideoAvailable(true);}else{setVideoAvailable(false);}const audioPermission=await navigator.mediaDevices.getUserMedia({audio:true});if(audioPermission){setAudioAvailable(true);}else{setAudioAvailable(false);}if(navigator.mediaDevices.getDisplayMedia){setScreenAvailable(true);}else{setScreenAvailable(false);}if(videoAvailable||audioAvailable){const userMediaStream=await navigator.mediaDevices.getUserMedia({video:videoAvailable,audio:audioAvailable});if(userMediaStream){window.localStream=userMediaStream;if(localVideoref.current){localVideoref.current.srcObject=userMediaStream;}}}}catch(error){console.log(error);}};useEffect(()=>{if(video!==undefined&&audio!==undefined){getUserMedia();}},[video,audio]);let getMedia=()=>{setVideo(videoAvailable);setAudio(audioAvailable);connectToSocketServer();};let getUserMediaSuccess=stream=>{try{window.localStream.getTracks().forEach(track=>track.stop());}catch(e){console.log(e);}window.localStream=stream;localVideoref.current.srcObject=stream;for(let id in connections){if(id===socketIdRef.current)continue;connections[id].addStream(window.localStream);connections[id].createOffer().then(description=>{connections[id].setLocalDescription(description).then(()=>{socketRef.current.emit('signal',id,JSON.stringify({'sdp':connections[id].localDescription}));}).catch(e=>console.log(e));});}stream.getTracks().forEach(track=>track.onended=()=>{setVideo(false);setAudio(false);try{let tracks=localVideoref.current.srcObject.getTracks();tracks.forEach(track=>track.stop());}catch(e){console.log(e);}let blackSilence=function(){return new MediaStream([black(...arguments),silence()]);};window.localStream=blackSilence();localVideoref.current.srcObject=window.localStream;for(let id in connections){connections[id].addStream(window.localStream);connections[id].createOffer().then(description=>{connections[id].setLocalDescription(description).then(()=>{socketRef.current.emit('signal',id,JSON.stringify({'sdp':connections[id].localDescription}));}).catch(e=>console.log(e));});}});};let getUserMedia=()=>{if(video&&videoAvailable||audio&&audioAvailable){navigator.mediaDevices.getUserMedia({video:video,audio:audio}).then(getUserMediaSuccess).then(stream=>{}).catch(e=>console.log(e));}else{try{let tracks=localVideoref.current.srcObject.getTracks();tracks.forEach(track=>track.stop());}catch(e){}}};let getDislayMediaSuccess=stream=>{try{window.localStream.getTracks().forEach(track=>track.stop());}catch(e){console.log(e);}window.localStream=stream;localVideoref.current.srcObject=stream;for(let id in connections){if(id===socketIdRef.current)continue;connections[id].addStream(window.localStream);connections[id].createOffer().then(description=>{connections[id].setLocalDescription(description).then(()=>{socketRef.current.emit('signal',id,JSON.stringify({'sdp':connections[id].localDescription}));}).catch(e=>console.log(e));});}stream.getTracks().forEach(track=>track.onended=()=>{setScreen(false);try{let tracks=localVideoref.current.srcObject.getTracks();tracks.forEach(track=>track.stop());}catch(e){console.log(e);}let blackSilence=function(){return new MediaStream([black(...arguments),silence()]);};window.localStream=blackSilence();localVideoref.current.srcObject=window.localStream;getUserMedia();});};let gotMessageFromServer=(fromId,message)=>{var signal=JSON.parse(message);if(fromId!==socketIdRef.current){if(signal.sdp){connections[fromId].setRemoteDescription(new RTCSessionDescription(signal.sdp)).then(()=>{if(signal.sdp.type==='offer'){connections[fromId].createAnswer().then(description=>{connections[fromId].setLocalDescription(description).then(()=>{socketRef.current.emit('signal',fromId,JSON.stringify({'sdp':connections[fromId].localDescription}));}).catch(e=>console.log(e));}).catch(e=>console.log(e));}}).catch(e=>console.log(e));}if(signal.ice){connections[fromId].addIceCandidate(new RTCIceCandidate(signal.ice)).catch(e=>console.log(e));}}};let connectToSocketServer=()=>{socketRef.current=io.connect(server_url,{secure:false});socketRef.current.on('signal',gotMessageFromServer);socketRef.current.on('connect',()=>{socketRef.current.emit('join-call',window.location.href);socketIdRef.current=socketRef.current.id;socketRef.current.on('chat-message',addMessage);socketRef.current.on('user-left',id=>{setVideos(videos=>videos.filter(video=>video.socketId!==id));});socketRef.current.on('user-joined',(id,clients)=>{clients.forEach(socketListId=>{connections[socketListId]=new RTCPeerConnection(peerConfigConnections);connections[socketListId].onicecandidate=function(event){if(event.candidate!=null){socketRef.current.emit('signal',socketListId,JSON.stringify({'ice':event.candidate}));}};connections[socketListId].onaddstream=event=>{let videoExists=videoRef.current.find(video=>video.socketId===socketListId);if(videoExists){setVideos(videos=>{const updatedVideos=videos.map(video=>video.socketId===socketListId?_objectSpread(_objectSpread({},video),{},{stream:event.stream}):video);videoRef.current=updatedVideos;return updatedVideos;});}else{let newVideo={socketId:socketListId,stream:event.stream,autoplay:true,playsinline:true};setVideos(videos=>{const updatedVideos=[...videos,newVideo];videoRef.current=updatedVideos;return updatedVideos;});}};if(window.localStream!==undefined&&window.localStream!==null){connections[socketListId].addStream(window.localStream);}else{let blackSilence=function(){return new MediaStream([black(...arguments),silence()]);};window.localStream=blackSilence();connections[socketListId].addStream(window.localStream);}});if(id===socketIdRef.current){for(let id2 in connections){if(id2===socketIdRef.current)continue;try{connections[id2].addStream(window.localStream);}catch(e){}connections[id2].createOffer().then(description=>{connections[id2].setLocalDescription(description).then(()=>{socketRef.current.emit('signal',id2,JSON.stringify({'sdp':connections[id2].localDescription}));}).catch(e=>console.log(e));});}}});});};let silence=()=>{let ctx=new AudioContext();let oscillator=ctx.createOscillator();let dst=oscillator.connect(ctx.createMediaStreamDestination());oscillator.start();ctx.resume();return Object.assign(dst.stream.getAudioTracks()[0],{enabled:false});};let black=function(){let{width=640,height=480}=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let canvas=Object.assign(document.createElement(\"canvas\"),{width,height});canvas.getContext('2d').fillRect(0,0,width,height);let stream=canvas.captureStream();return Object.assign(stream.getVideoTracks()[0],{enabled:false});};let handleVideo=()=>{setVideo(!video);};let handleAudio=()=>{setAudio(!audio);};useEffect(()=>{if(screen!==undefined){getDislayMedia();}},[screen]);let handleScreen=()=>{setScreen(!screen);};let handleEndCall=()=>{try{let tracks=localVideoref.current.srcObject.getTracks();tracks.forEach(track=>track.stop());}catch(e){}window.location.href=\"/\";};let openChat=()=>{setModal(true);setNewMessages(0);};let closeChat=()=>{setModal(false);};let handleMessage=e=>{setMessage(e.target.value);};const addMessage=(data,sender,socketIdSender)=>{setMessages(prevMessages=>[...prevMessages,{sender:sender,data:data}]);if(socketIdSender!==socketIdRef.current){setNewMessages(prevNewMessages=>prevNewMessages+1);}};let sendMessage=()=>{socketRef.current.emit('chat-message',message,username);setMessage(\"\");};let connect=()=>{setAskForUsername(false);getMedia();};return/*#__PURE__*/_jsx(\"div\",{children:askForUsername===true?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Enter into Lobby \"}),/*#__PURE__*/_jsx(TextField,{id:\"outlined-basic\",label:\"Username\",value:username,onChange:e=>setUsername(e.target.value),variant:\"outlined\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:connect,children:\"Connect\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"video\",{ref:localVideoref,autoPlay:true,muted:true})})]}):/*#__PURE__*/_jsxs(\"div\",{className:styles.meetVideoContainer,children:[showModal?/*#__PURE__*/_jsx(\"div\",{className:styles.chatRoom,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.chatContainer,children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Chat\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.chattingDisplay,children:messages.length!==0?messages.map((item,index)=>{return/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:\"20px\"},children:[/*#__PURE__*/_jsx(\"p\",{style:{fontWeight:\"bold\"},children:item.sender}),/*#__PURE__*/_jsx(\"p\",{children:item.data})]},index);}):/*#__PURE__*/_jsx(\"p\",{children:\"No Messages Yet\"})}),/*#__PURE__*/_jsxs(\"div\",{className:styles.chattingArea,children:[/*#__PURE__*/_jsx(TextField,{value:message,onChange:e=>setMessage(e.target.value),id:\"outlined-basic\",label:\"Enter Your chat\",variant:\"outlined\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:sendMessage,children:\"Send\"})]})]})}):/*#__PURE__*/_jsx(_Fragment,{}),/*#__PURE__*/_jsxs(\"div\",{className:styles.buttonContainers,children:[/*#__PURE__*/_jsx(IconButton,{onClick:handleVideo,style:{color:\"white\"},children:video===true?/*#__PURE__*/_jsx(VideocamIcon,{}):/*#__PURE__*/_jsx(VideocamOffIcon,{})}),/*#__PURE__*/_jsx(IconButton,{onClick:handleEndCall,style:{color:\"red\"},children:/*#__PURE__*/_jsx(CallEndIcon,{})}),/*#__PURE__*/_jsx(IconButton,{onClick:handleAudio,style:{color:\"white\"},children:audio===true?/*#__PURE__*/_jsx(MicIcon,{}):/*#__PURE__*/_jsx(MicOffIcon,{})}),screenAvailable===true?/*#__PURE__*/_jsx(IconButton,{onClick:handleScreen,style:{color:\"white\"},children:screen===true?/*#__PURE__*/_jsx(ScreenShareIcon,{}):/*#__PURE__*/_jsx(StopScreenShareIcon,{})}):/*#__PURE__*/_jsx(_Fragment,{}),/*#__PURE__*/_jsx(Badge,{badgeContent:newMessages,max:999,color:\"orange\",children:/*#__PURE__*/_jsxs(IconButton,{onClick:()=>setModal(!showModal),style:{color:\"white\"},children:[/*#__PURE__*/_jsx(ChatIcon,{}),\"                        \"]})})]}),/*#__PURE__*/_jsx(\"video\",{className:styles.meetUserVideo,ref:localVideoref,autoPlay:true,muted:true}),/*#__PURE__*/_jsx(\"div\",{className:styles.conferenceView,children:videos.map(video=>/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"video\",{\"data-socket\":video.socketId,ref:ref=>{if(ref&&video.stream){ref.srcObject=video.stream;}},autoPlay:true})},video.socketId))})]})});}","map":{"version":3,"names":["React","useEffect","useRef","useState","io","Badge","IconButton","TextField","Button","VideocamIcon","VideocamOffIcon","styles","CallEndIcon","MicIcon","MicOffIcon","ScreenShareIcon","StopScreenShareIcon","ChatIcon","server","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","server_url","connections","peerConfigConnections","VideoMeetComponent","socketRef","socketIdRef","localVideoref","videoAvailable","setVideoAvailable","audioAvailable","setAudioAvailable","video","setVideo","audio","setAudio","screen","setScreen","showModal","setModal","screenAvailable","setScreenAvailable","messages","setMessages","message","setMessage","newMessages","setNewMessages","askForUsername","setAskForUsername","username","setUsername","videoRef","videos","setVideos","getPermissions","getDislayMedia","navigator","mediaDevices","getDisplayMedia","then","getDislayMediaSuccess","stream","catch","e","console","log","videoPermission","getUserMedia","audioPermission","userMediaStream","window","localStream","current","srcObject","error","undefined","getMedia","connectToSocketServer","getUserMediaSuccess","getTracks","forEach","track","stop","id","addStream","createOffer","description","setLocalDescription","emit","JSON","stringify","localDescription","onended","tracks","blackSilence","MediaStream","black","arguments","silence","gotMessageFromServer","fromId","signal","parse","sdp","setRemoteDescription","RTCSessionDescription","type","createAnswer","ice","addIceCandidate","RTCIceCandidate","connect","secure","on","location","href","addMessage","filter","socketId","clients","socketListId","RTCPeerConnection","onicecandidate","event","candidate","onaddstream","videoExists","find","updatedVideos","map","_objectSpread","newVideo","autoplay","playsinline","id2","ctx","AudioContext","oscillator","createOscillator","dst","createMediaStreamDestination","start","resume","Object","assign","getAudioTracks","enabled","width","height","length","canvas","document","createElement","getContext","fillRect","captureStream","getVideoTracks","handleVideo","handleAudio","handleScreen","handleEndCall","openChat","closeChat","handleMessage","target","value","data","sender","socketIdSender","prevMessages","prevNewMessages","sendMessage","children","label","onChange","variant","onClick","ref","autoPlay","muted","className","meetVideoContainer","chatRoom","chatContainer","chattingDisplay","item","index","style","marginBottom","fontWeight","chattingArea","buttonContainers","color","badgeContent","max","meetUserVideo","conferenceView"],"sources":["C:/Users/MOKSHITH/OneDrive/Desktop/VIDEO CONFERENCE/frontend/src/pages/VideoMeet.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport io from \"socket.io-client\";\nimport { Badge, IconButton, TextField } from '@mui/material';\nimport { Button } from '@mui/material';\nimport VideocamIcon from '@mui/icons-material/Videocam';\nimport VideocamOffIcon from '@mui/icons-material/VideocamOff'\nimport styles from \"../styles/videoComponent.module.css\";\nimport CallEndIcon from '@mui/icons-material/CallEnd'\nimport MicIcon from '@mui/icons-material/Mic'\nimport MicOffIcon from '@mui/icons-material/MicOff'\nimport ScreenShareIcon from '@mui/icons-material/ScreenShare';\nimport StopScreenShareIcon from '@mui/icons-material/StopScreenShare'\nimport ChatIcon from '@mui/icons-material/Chat'\nimport server from '../environment';\n\nconst server_url = server;\n\nvar connections = {};\n\nconst peerConfigConnections = {\n    \"iceServers\": [\n        { \"urls\": \"stun:stun.l.google.com:19302\" }\n    ]\n}\n\nexport default function VideoMeetComponent() {\n\n    var socketRef = useRef();\n    let socketIdRef = useRef();\n\n    let localVideoref = useRef();\n\n    let [videoAvailable, setVideoAvailable] = useState(true);\n\n    let [audioAvailable, setAudioAvailable] = useState(true);\n\n    let [video, setVideo] = useState([]);\n\n    let [audio, setAudio] = useState();\n\n    let [screen, setScreen] = useState();\n\n    let [showModal, setModal] = useState(true);\n\n    let [screenAvailable, setScreenAvailable] = useState();\n\n    let [messages, setMessages] = useState([])\n\n    let [message, setMessage] = useState(\"\");\n\n    let [newMessages, setNewMessages] = useState(3);\n\n    let [askForUsername, setAskForUsername] = useState(true);\n\n    let [username, setUsername] = useState(\"\");\n\n    const videoRef = useRef([])\n\n    let [videos, setVideos] = useState([])\n\n\n    useEffect(() => {\n        getPermissions();\n    }, [])\n\n    let getDislayMedia = () => {\n        if (screen) {\n            if (navigator.mediaDevices.getDisplayMedia) {\n                navigator.mediaDevices.getDisplayMedia({ video: true, audio: true })\n                    .then(getDislayMediaSuccess)\n                    .then((stream) => { })\n                    .catch((e) => console.log(e))\n            }\n        }\n    }\n\n    const getPermissions = async () => {\n        try {\n            const videoPermission = await navigator.mediaDevices.getUserMedia({ video: true });\n            if (videoPermission) {\n                setVideoAvailable(true);\n            } else {\n                setVideoAvailable(false);\n            }\n\n            const audioPermission = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (audioPermission) {\n                setAudioAvailable(true);\n            } else {\n                setAudioAvailable(false);\n            }\n\n            if (navigator.mediaDevices.getDisplayMedia) {\n                setScreenAvailable(true);\n            } else {\n                setScreenAvailable(false);\n            }\n\n            if (videoAvailable || audioAvailable) {\n                const userMediaStream = await navigator.mediaDevices.getUserMedia({ video: videoAvailable, audio: audioAvailable });\n                if (userMediaStream) {\n                    window.localStream = userMediaStream;\n                    if (localVideoref.current) {\n                        localVideoref.current.srcObject = userMediaStream;\n                    }\n                }\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    useEffect(() => {\n        if (video !== undefined && audio !== undefined) {\n            getUserMedia();\n        }\n    }, [video, audio])\n    let getMedia = () => {\n        setVideo(videoAvailable);\n        setAudio(audioAvailable);\n        connectToSocketServer();\n    }\n\n    let getUserMediaSuccess = (stream) => {\n        try {\n            window.localStream.getTracks().forEach(track => track.stop())\n        } catch (e) { console.log(e) }\n\n        window.localStream = stream\n        localVideoref.current.srcObject = stream\n\n        for (let id in connections) {\n            if (id === socketIdRef.current) continue\n\n            connections[id].addStream(window.localStream)\n\n            connections[id].createOffer().then((description) => {\n                connections[id].setLocalDescription(description)\n                    .then(() => {\n                        socketRef.current.emit('signal', id, JSON.stringify({ 'sdp': connections[id].localDescription }))\n                    })\n                    .catch(e => console.log(e))\n            })\n        }\n\n        stream.getTracks().forEach(track => track.onended = () => {\n            setVideo(false);\n            setAudio(false);\n\n            try {\n                let tracks = localVideoref.current.srcObject.getTracks()\n                tracks.forEach(track => track.stop())\n            } catch (e) { console.log(e) }\n\n            let blackSilence = (...args) => new MediaStream([black(...args), silence()])\n            window.localStream = blackSilence()\n            localVideoref.current.srcObject = window.localStream\n\n            for (let id in connections) {\n                connections[id].addStream(window.localStream)\n\n                connections[id].createOffer().then((description) => {\n                    connections[id].setLocalDescription(description)\n                        .then(() => {\n                            socketRef.current.emit('signal', id, JSON.stringify({ 'sdp': connections[id].localDescription }))\n                        })\n                        .catch(e => console.log(e))\n                })\n            }\n        })\n    }\n\n    let getUserMedia = () => {\n        if ((video && videoAvailable) || (audio && audioAvailable)) {\n            navigator.mediaDevices.getUserMedia({ video: video, audio: audio })\n                .then(getUserMediaSuccess)\n                .then((stream) => { })\n                .catch((e) => console.log(e))\n        } else {\n            try {\n                let tracks = localVideoref.current.srcObject.getTracks()\n                tracks.forEach(track => track.stop())\n            } catch (e) { }\n        }\n    }\n\n    let getDislayMediaSuccess = (stream) => {\n        try {\n            window.localStream.getTracks().forEach(track => track.stop())\n        } catch (e) { console.log(e) }\n\n        window.localStream = stream\n        localVideoref.current.srcObject = stream\n\n        for (let id in connections) {\n            if (id === socketIdRef.current) continue\n\n            connections[id].addStream(window.localStream)\n\n            connections[id].createOffer().then((description) => {\n                connections[id].setLocalDescription(description)\n                    .then(() => {\n                        socketRef.current.emit('signal', id, JSON.stringify({ 'sdp': connections[id].localDescription }))\n                    })\n                    .catch(e => console.log(e))\n            })\n        }\n\n        stream.getTracks().forEach(track => track.onended = () => {\n            setScreen(false)\n\n            try {\n                let tracks = localVideoref.current.srcObject.getTracks()\n                tracks.forEach(track => track.stop())\n            } catch (e) { console.log(e) }\n\n            let blackSilence = (...args) => new MediaStream([black(...args), silence()])\n            window.localStream = blackSilence()\n            localVideoref.current.srcObject = window.localStream\n\n            getUserMedia()\n\n        })\n    }\n\n    let gotMessageFromServer = (fromId, message) => {\n        var signal = JSON.parse(message)\n\n        if (fromId !== socketIdRef.current) {\n            if (signal.sdp) {\n                connections[fromId].setRemoteDescription(new RTCSessionDescription(signal.sdp)).then(() => {\n                    if (signal.sdp.type === 'offer') {\n                        connections[fromId].createAnswer().then((description) => {\n                            connections[fromId].setLocalDescription(description).then(() => {\n                                socketRef.current.emit('signal', fromId, JSON.stringify({ 'sdp': connections[fromId].localDescription }))\n                            }).catch(e => console.log(e))\n                        }).catch(e => console.log(e))\n                    }\n                }).catch(e => console.log(e))\n            }\n\n            if (signal.ice) {\n                connections[fromId].addIceCandidate(new RTCIceCandidate(signal.ice)).catch(e => console.log(e))\n            }\n        }\n    }\n\n    let connectToSocketServer = () => {\n        socketRef.current = io.connect(server_url, { secure: false })\n\n        socketRef.current.on('signal', gotMessageFromServer)\n\n        socketRef.current.on('connect', () => {\n            socketRef.current.emit('join-call', window.location.href)\n            socketIdRef.current = socketRef.current.id\n\n            socketRef.current.on('chat-message', addMessage)\n\n            socketRef.current.on('user-left', (id) => {\n                setVideos((videos) => videos.filter((video) => video.socketId !== id))\n            })\n\n            socketRef.current.on('user-joined', (id, clients) => {\n                clients.forEach((socketListId) => {\n\n                    connections[socketListId] = new RTCPeerConnection(peerConfigConnections)\n                    connections[socketListId].onicecandidate = function (event) {\n                        if (event.candidate != null) {\n                            socketRef.current.emit('signal', socketListId, JSON.stringify({ 'ice': event.candidate }))\n                        }\n                    }\n\n                    connections[socketListId].onaddstream = (event) => {\n                        let videoExists = videoRef.current.find(video => video.socketId === socketListId);\n\n                        if (videoExists) {\n                            setVideos(videos => {\n                                const updatedVideos = videos.map(video =>\n                                    video.socketId === socketListId ? { ...video, stream: event.stream } : video\n                                );\n                                videoRef.current = updatedVideos;\n                                return updatedVideos;\n                            });\n                        } else {\n                            let newVideo = {\n                                socketId: socketListId,\n                                stream: event.stream,\n                                autoplay: true,\n                                playsinline: true\n                            };\n\n                            setVideos(videos => {\n                                const updatedVideos = [...videos, newVideo];\n                                videoRef.current = updatedVideos;\n                                return updatedVideos;\n                            });\n                        }\n                    };\n\n                    if (window.localStream !== undefined && window.localStream !== null) {\n                        connections[socketListId].addStream(window.localStream)\n                    } else {\n                        let blackSilence = (...args) => new MediaStream([black(...args), silence()])\n                        window.localStream = blackSilence()\n                        connections[socketListId].addStream(window.localStream)\n                    }\n                })\n\n                if (id === socketIdRef.current) {\n                    for (let id2 in connections) {\n                        if (id2 === socketIdRef.current) continue\n\n                        try {\n                            connections[id2].addStream(window.localStream)\n                        } catch (e) { }\n\n                        connections[id2].createOffer().then((description) => {\n                            connections[id2].setLocalDescription(description)\n                                .then(() => {\n                                    socketRef.current.emit('signal', id2, JSON.stringify({ 'sdp': connections[id2].localDescription }))\n                                })\n                                .catch(e => console.log(e))\n                        })\n                    }\n                }\n            })\n        })\n    }\n\n    let silence = () => {\n        let ctx = new AudioContext()\n        let oscillator = ctx.createOscillator()\n        let dst = oscillator.connect(ctx.createMediaStreamDestination())\n        oscillator.start()\n        ctx.resume()\n        return Object.assign(dst.stream.getAudioTracks()[0], { enabled: false })\n    }\n    let black = ({ width = 640, height = 480 } = {}) => {\n        let canvas = Object.assign(document.createElement(\"canvas\"), { width, height })\n        canvas.getContext('2d').fillRect(0, 0, width, height)\n        let stream = canvas.captureStream()\n        return Object.assign(stream.getVideoTracks()[0], { enabled: false })\n    }\n\n    let handleVideo = () => {\n        setVideo(!video);\n    }\n    let handleAudio = () => {\n        setAudio(!audio)\n    }\n\n    useEffect(() => {\n        if (screen !== undefined) {\n            getDislayMedia();\n        }\n    }, [screen])\n    let handleScreen = () => {\n        setScreen(!screen);\n    }\n\n    let handleEndCall = () => {\n        try {\n            let tracks = localVideoref.current.srcObject.getTracks()\n            tracks.forEach(track => track.stop())\n        } catch (e) { }\n        window.location.href = \"/\"\n    }\n\n    let openChat = () => {\n        setModal(true);\n        setNewMessages(0);\n    }\n    let closeChat = () => {\n        setModal(false);\n    }\n    let handleMessage = (e) => {\n        setMessage(e.target.value);\n    }\n\n    const addMessage = (data, sender, socketIdSender) => {\n        setMessages((prevMessages) => [\n            ...prevMessages,\n            { sender: sender, data: data }\n        ]);\n        if (socketIdSender !== socketIdRef.current) {\n            setNewMessages((prevNewMessages) => prevNewMessages + 1);\n        }\n    };\n\n\n    let sendMessage = () => {\n        socketRef.current.emit('chat-message', message, username)\n        setMessage(\"\");\n    }\n    \n    let connect = () => {\n        setAskForUsername(false);\n        getMedia();\n    }\n\n    return (\n        <div>\n            {askForUsername === true ?\n                <div>\n                    <h2>Enter into Lobby </h2>\n                    <TextField id=\"outlined-basic\" label=\"Username\" value={username} onChange={e => setUsername(e.target.value)} variant=\"outlined\" />\n                    <Button variant=\"contained\" onClick={connect}>Connect</Button>\n                    <div>\n                        <video ref={localVideoref} autoPlay muted></video>\n                    </div>\n                </div> :\n                <div className={styles.meetVideoContainer}>\n                    {showModal ? <div className={styles.chatRoom}>\n                        <div className={styles.chatContainer}>\n                            <h1>Chat</h1>\n                            <div className={styles.chattingDisplay}>\n                                {messages.length !== 0 ? messages.map((item, index) => {\n                                    return (\n                                        <div style={{ marginBottom: \"20px\" }} key={index}>\n                                            <p style={{ fontWeight: \"bold\" }}>{item.sender}</p>\n                                            <p>{item.data}</p>\n                                        </div>\n                                    )\n                                }) : <p>No Messages Yet</p>}\n                            </div>\n                            <div className={styles.chattingArea}>\n                                <TextField value={message} onChange={(e) => setMessage(e.target.value)} id=\"outlined-basic\" label=\"Enter Your chat\" variant=\"outlined\" />\n                                <Button variant='contained' onClick={sendMessage}>Send</Button>\n                            </div>\n                        </div>\n                    </div> : <></>}\n                    <div className={styles.buttonContainers}>\n                        <IconButton onClick={handleVideo} style={{ color: \"white\" }}>\n                            {(video === true) ? <VideocamIcon /> : <VideocamOffIcon />}\n                        </IconButton>\n                        <IconButton onClick={handleEndCall} style={{ color: \"red\" }}>\n                            <CallEndIcon  />\n                        </IconButton>\n                        <IconButton onClick={handleAudio} style={{ color: \"white\" }}>\n                            {audio === true ? <MicIcon /> : <MicOffIcon />}\n                        </IconButton>\n                        {screenAvailable === true ?\n                            <IconButton onClick={handleScreen} style={{ color: \"white\" }}>\n                                {screen === true ? <ScreenShareIcon /> : <StopScreenShareIcon />}\n                            </IconButton> : <></>}\n                        <Badge badgeContent={newMessages} max={999} color='orange'>\n                            <IconButton onClick={() => setModal(!showModal)} style={{ color: \"white\" }}>\n                                <ChatIcon />                        </IconButton>\n                        </Badge>\n                    </div>\n                    <video className={styles.meetUserVideo} ref={localVideoref} autoPlay muted></video>\n                    <div className={styles.conferenceView}>\n                        {videos.map((video) => (\n                            <div key={video.socketId}>\n                                <video\n                                    data-socket={video.socketId}\n                                    ref={ref => {\n                                        if (ref && video.stream) {\n                                            ref.srcObject = video.stream;\n                                        }\n                                    }}\n                                    autoPlay\n                                >\n                                </video>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            }\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}